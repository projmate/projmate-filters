// Generated by CoffeeScript 1.6.1
(function() {
  var less, path, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  less = require("less");

  _ = require("lodash");

  path = require("path");

  module.exports = function(Projmate) {
    var Less;
    return Less = (function(_super) {

      __extends(Less, _super);

      function Less() {
        return Less.__super__.constructor.apply(this, arguments);
      }

      Less.prototype.extnames = ".less";

      Less.prototype.outExtname = ".css";

      Less.prototype.process = function(asset, options, cb) {
        var parser;
        options = _.defaults(options, {
          paths: [asset.dirname],
          compress: false
        });
        try {
          parser = new less.Parser(options);
          return parser.parse(asset.text, function(err, tree) {
            var css;
            if (err) {
              return cb(err);
            }
            try {
              css = tree.toCSS(options);
              return cb(null, css);
            } catch (ex) {
              return cb(ex);
            }
          });
        } catch (ex) {
          return cb(ex);
        }
      };

      return Less;

    })(Projmate.Filter);
  };

}).call(this);
