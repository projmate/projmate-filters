// Generated by CoffeeScript 1.5.0
(function() {
  var Compiler, StylusCompiler, fs, nib, path, stylus,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Compiler = require('./compiler');

  fs = require('fs');

  path = require('path');

  stylus = require('stylus');

  try {
    nib = require('nib')();
  } catch (error) {
    false;
  }

  StylusCompiler = (function(_super) {

    __extends(StylusCompiler, _super);

    function StylusCompiler() {
      StylusCompiler.__super__.constructor.apply(this, arguments);
    }

    StylusCompiler.prototype.extnames = '.styl';

    StylusCompiler.prototype.outExtname = '.css';

    StylusCompiler.prototype.compile = function(info, cb) {
      var compiler, options, pathname, text;
      options = this.options;
      text = info.text, pathname = info.pathname;
      try {
        compiler = stylus(text).set('filename', pathname).set('compress', true).include(path.dirname(pathname));
        if (nib) {
          compiler.include(nib.path);
        }
        return compiler.render(cb);
      } catch (err) {
        return cb(err);
      }
    };

    return StylusCompiler;

  })(Compiler);

  module.exports = StylusCompiler;

}).call(this);
